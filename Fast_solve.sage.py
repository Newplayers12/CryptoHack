

# This file was *autogenerated* from the file Fast_solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_190967730791265537979995407231913212617142631949210029973664489371864254089101318127021499623950995308892844545079700726535949536180559671218363207456393861859317182010132633813865769973824816218356632761130327832580802848602639747350663704657975830739185460741777173026120420921754605314488570634365104715286050772735059808549809097796556825472456152636455756790982064392524857830614369274075067739201556987178998259657885217578803363096693678054958597728727449482017399618816636563803883044186128618313228888023949266729200044438535331046951344621424107778576283146456461232934944698851502562805754583954088562342 = Integer(190967730791265537979995407231913212617142631949210029973664489371864254089101318127021499623950995308892844545079700726535949536180559671218363207456393861859317182010132633813865769973824816218356632761130327832580802848602639747350663704657975830739185460741777173026120420921754605314488570634365104715286050772735059808549809097796556825472456152636455756790982064392524857830614369274075067739201556987178998259657885217578803363096693678054958597728727449482017399618816636563803883044186128618313228888023949266729200044438535331046951344621424107778576283146456461232934944698851502562805754583954088562342); _sage_const_21026109342821363998310608414741599091653536081900468220352445801365223577017790394143052342236335573904703324638341895153529964176133848980374600051387169661878029331787682660403563834370953995862871646086403578266403298814871855288732119986395337804671590103650209806659787365850497236776678471269651570377238546852095386827755927722193355448566701965517109321840089414118096740128123801409576222890862385591857148467365686550977623222213395688158608305441992182436625681464308800876895983738996930927116378305414242110157850714495948184126841960639282777961907784266905301793589490365054339365298030769759398519699 = Integer(21026109342821363998310608414741599091653536081900468220352445801365223577017790394143052342236335573904703324638341895153529964176133848980374600051387169661878029331787682660403563834370953995862871646086403578266403298814871855288732119986395337804671590103650209806659787365850497236776678471269651570377238546852095386827755927722193355448566701965517109321840089414118096740128123801409576222890862385591857148467365686550977623222213395688158608305441992182436625681464308800876895983738996930927116378305414242110157850714495948184126841960639282777961907784266905301793589490365054339365298030769759398519699); _sage_const_5022038306014920015882369307721319731697993103644796276253752145977019947513094540980953997654398757669435048390897890589402622803022502096088625907275378885190958598412627898274490121157494441721862821820157464135005890185210756419296950594680961819251281597963809061416892893286011511921079714347454269439308351476282648794783860493916432320751979822986008276485376001974336971493664121740131321423277702665335152371971284390228200828146144621730189351491053760503370632637761178917950451151608096591185091583534783570018392685824341369535550212524622847123467252199484889579342361230593918777084701252266467514363 = Integer(5022038306014920015882369307721319731697993103644796276253752145977019947513094540980953997654398757669435048390897890589402622803022502096088625907275378885190958598412627898274490121157494441721862821820157464135005890185210756419296950594680961819251281597963809061416892893286011511921079714347454269439308351476282648794783860493916432320751979822986008276485376001974336971493664121740131321423277702665335152371971284390228200828146144621730189351491053760503370632637761178917950451151608096591185091583534783570018392685824341369535550212524622847123467252199484889579342361230593918777084701252266467514363); _sage_const_15242792512468782622365462267919134838829894452684343939669391886736312884134608042271323853861583712963255420690086910895800873155356866175665316389025846226156832530941881633719036670115397082991457370269200899476480007773854545004660368857086099577948399775988984278486035577154655791689997393534005921629456221251553649336862289303554168076766184732565856719715678392841397363989025771321571219882717498252921226967383537588775183843415766667051354922879213827309260642956782500387164246159506210218435151109908553544012112577223845972727173063914786993233057665572773777747892621052708970778812916268576933844043 = Integer(15242792512468782622365462267919134838829894452684343939669391886736312884134608042271323853861583712963255420690086910895800873155356866175665316389025846226156832530941881633719036670115397082991457370269200899476480007773854545004660368857086099577948399775988984278486035577154655791689997393534005921629456221251553649336862289303554168076766184732565856719715678392841397363989025771321571219882717498252921226967383537588775183843415766667051354922879213827309260642956782500387164246159506210218435151109908553544012112577223845972727173063914786993233057665572773777747892621052708970778812916268576933844043); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_11 = Integer(11)# from Crypto.Util.number import long_to_bytes as l2b
# from gmpy2 import iroot
from sage.all import *

data = {
    "encrypted_flag": _sage_const_190967730791265537979995407231913212617142631949210029973664489371864254089101318127021499623950995308892844545079700726535949536180559671218363207456393861859317182010132633813865769973824816218356632761130327832580802848602639747350663704657975830739185460741777173026120420921754605314488570634365104715286050772735059808549809097796556825472456152636455756790982064392524857830614369274075067739201556987178998259657885217578803363096693678054958597728727449482017399618816636563803883044186128618313228888023949266729200044438535331046951344621424107778576283146456461232934944698851502562805754583954088562342 ,
    "modulus": _sage_const_21026109342821363998310608414741599091653536081900468220352445801365223577017790394143052342236335573904703324638341895153529964176133848980374600051387169661878029331787682660403563834370953995862871646086403578266403298814871855288732119986395337804671590103650209806659787365850497236776678471269651570377238546852095386827755927722193355448566701965517109321840089414118096740128123801409576222890862385591857148467365686550977623222213395688158608305441992182436625681464308800876895983738996930927116378305414242110157850714495948184126841960639282777961907784266905301793589490365054339365298030769759398519699 ,
    "padding": [
        _sage_const_5022038306014920015882369307721319731697993103644796276253752145977019947513094540980953997654398757669435048390897890589402622803022502096088625907275378885190958598412627898274490121157494441721862821820157464135005890185210756419296950594680961819251281597963809061416892893286011511921079714347454269439308351476282648794783860493916432320751979822986008276485376001974336971493664121740131321423277702665335152371971284390228200828146144621730189351491053760503370632637761178917950451151608096591185091583534783570018392685824341369535550212524622847123467252199484889579342361230593918777084701252266467514363 ,
        _sage_const_15242792512468782622365462267919134838829894452684343939669391886736312884134608042271323853861583712963255420690086910895800873155356866175665316389025846226156832530941881633719036670115397082991457370269200899476480007773854545004660368857086099577948399775988984278486035577154655791689997393534005921629456221251553649336862289303554168076766184732565856719715678392841397363989025771321571219882717498252921226967383537588775183843415766667051354922879213827309260642956782500387164246159506210218435151109908553544012112577223845972727173063914786993233057665572773777747892621052708970778812916268576933844043 
    ]
}


N = Integer(data['modulus'])

flag = Integer(data['encrypted_flag'])
pad = data['padding']


# K = Zmod(N)
# R = PolynomialRing(K, 't', implementation = 'NTL')
t = PolynomialRing(IntegerModRing(), 't').gen()
set_verbose(_sage_const_2 )
f = ((pad[_sage_const_0 ]*t + pad[_sage_const_1 ])**_sage_const_11  - flag)*pow(pad[_sage_const_0 ], -_sage_const_11 , N)
print(f.factor())

# flag = (flag - pad[1])*pow(pad[0], -1, N) % N

# print(iroot(flag, 11))

